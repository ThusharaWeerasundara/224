$date
	Thu Sep 17 06:47:48 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 1 ! mem_write $end
$var wire 1 " mem_read $end
$var wire 1 # mem_busywait $end
$var wire 8 $ WRITEDATA [7:0] $end
$var wire 8 % READDATA [7:0] $end
$var wire 32 & PC [31:0] $end
$var wire 8 ' ADDRESS [7:0] $end
$var reg 1 ( CLK $end
$var reg 32 ) INSTRUCTION [31:0] $end
$var reg 1 * RESET $end
$var integer 32 + count [31:0] $end
$scope module datamemory $end
$var wire 1 ( clock $end
$var wire 1 * reset $end
$var wire 8 , writedata [7:0] $end
$var wire 1 ! write $end
$var wire 1 " read $end
$var wire 8 - address [7:0] $end
$var reg 1 # busywait $end
$var reg 1 . readaccess $end
$var reg 8 / readdata [7:0] $end
$var reg 1 0 writeaccess $end
$var integer 32 1 i [31:0] $end
$upscope $end
$scope module mycpu $end
$var wire 1 ( CLK $end
$var wire 32 2 INSTRUCTION [31:0] $end
$var wire 8 3 READDATA [7:0] $end
$var wire 1 * RESET $end
$var wire 1 # busywait $end
$var wire 1 4 instruction_select $end
$var wire 1 5 select_bne $end
$var wire 1 6 select_branch $end
$var wire 1 7 zero_inverse $end
$var wire 1 8 zero $end
$var wire 32 9 target [31:0] $end
$var wire 8 : reg_in [7:0] $end
$var wire 32 ; pc [31:0] $end
$var wire 32 < new_val [31:0] $end
$var wire 8 = mux2_result [7:0] $end
$var wire 8 > mux1_result [7:0] $end
$var wire 8 ? minus_val [7:0] $end
$var wire 1 ! mem_write $end
$var wire 1 " mem_read $end
$var wire 1 @ jump $end
$var wire 32 A extended_val [31:0] $end
$var wire 1 B branch $end
$var wire 1 C b_notequal $end
$var wire 1 D WRITEENABLE $end
$var wire 8 E REGOUT2 [7:0] $end
$var wire 8 F REGOUT1 [7:0] $end
$var wire 1 G MUX2 $end
$var wire 1 H MUX1 $end
$var wire 8 I ALURESULT [7:0] $end
$var wire 4 J ALUOP [3:0] $end
$var reg 32 K new_target [31:0] $end
$var reg 32 L temp [31:0] $end
$scope module alu_system $end
$var wire 8 M AND_OP [7:0] $end
$var wire 8 N MOV [7:0] $end
$var wire 8 O OR_OP [7:0] $end
$var wire 1 8 zero $end
$var wire 8 P multiply_results [7:0] $end
$var wire 8 Q SUM [7:0] $end
$var wire 4 R SELECT [3:0] $end
$var wire 8 S DATA2 [7:0] $end
$var wire 8 T DATA1 [7:0] $end
$var reg 8 U RESULT [7:0] $end
$scope module fast_multiplication $end
$var wire 8 V result7 [7:0] $end
$var wire 8 W result6 [7:0] $end
$var wire 8 X result5 [7:0] $end
$var wire 8 Y result4 [7:0] $end
$var wire 8 Z result3 [7:0] $end
$var wire 8 [ result2 [7:0] $end
$var wire 8 \ result1 [7:0] $end
$var wire 8 ] in2 [7:0] $end
$var wire 8 ^ in1 [7:0] $end
$var wire 1 _ c7 $end
$var wire 1 ` c6 $end
$var wire 1 a c5 $end
$var wire 1 b c4 $end
$var wire 1 c c3 $end
$var wire 1 d c2 $end
$var wire 1 e c1 $end
$var reg 8 f out [7:0] $end
$scope module adder1 $end
$var wire 1 g a1 $end
$var wire 1 h a2 $end
$var wire 1 i a3 $end
$var wire 1 j a4 $end
$var wire 1 k a5 $end
$var wire 1 l a6 $end
$var wire 1 m a7 $end
$var wire 1 n a8 $end
$var wire 1 o b1 $end
$var wire 1 p b2 $end
$var wire 1 q b3 $end
$var wire 1 r b4 $end
$var wire 1 s b5 $end
$var wire 1 t b6 $end
$var wire 1 u b7 $end
$var wire 1 v b8 $end
$var reg 1 e cout $end
$var reg 8 w operand1 [7:0] $end
$var reg 8 x operand2 [7:0] $end
$var reg 8 y result [7:0] $end
$var reg 9 z temp [8:0] $end
$upscope $end
$scope module adder2 $end
$var wire 1 e a1 $end
$var wire 1 { a2 $end
$var wire 1 | a3 $end
$var wire 1 } a4 $end
$var wire 1 ~ a5 $end
$var wire 1 !" a6 $end
$var wire 1 "" a7 $end
$var wire 1 #" a8 $end
$var wire 1 $" b1 $end
$var wire 1 %" b2 $end
$var wire 1 &" b3 $end
$var wire 1 '" b4 $end
$var wire 1 (" b5 $end
$var wire 1 )" b6 $end
$var wire 1 *" b7 $end
$var wire 1 +" b8 $end
$var reg 1 d cout $end
$var reg 8 ," operand1 [7:0] $end
$var reg 8 -" operand2 [7:0] $end
$var reg 8 ." result [7:0] $end
$var reg 9 /" temp [8:0] $end
$upscope $end
$scope module adder3 $end
$var wire 1 d a1 $end
$var wire 1 0" a2 $end
$var wire 1 1" a3 $end
$var wire 1 2" a4 $end
$var wire 1 3" a5 $end
$var wire 1 4" a6 $end
$var wire 1 5" a7 $end
$var wire 1 6" a8 $end
$var wire 1 7" b1 $end
$var wire 1 8" b2 $end
$var wire 1 9" b3 $end
$var wire 1 :" b4 $end
$var wire 1 ;" b5 $end
$var wire 1 <" b6 $end
$var wire 1 =" b7 $end
$var wire 1 >" b8 $end
$var reg 1 c cout $end
$var reg 8 ?" operand1 [7:0] $end
$var reg 8 @" operand2 [7:0] $end
$var reg 8 A" result [7:0] $end
$var reg 9 B" temp [8:0] $end
$upscope $end
$scope module adder4 $end
$var wire 1 c a1 $end
$var wire 1 C" a2 $end
$var wire 1 D" a3 $end
$var wire 1 E" a4 $end
$var wire 1 F" a5 $end
$var wire 1 G" a6 $end
$var wire 1 H" a7 $end
$var wire 1 I" a8 $end
$var wire 1 J" b1 $end
$var wire 1 K" b2 $end
$var wire 1 L" b3 $end
$var wire 1 M" b4 $end
$var wire 1 N" b5 $end
$var wire 1 O" b6 $end
$var wire 1 P" b7 $end
$var wire 1 Q" b8 $end
$var reg 1 b cout $end
$var reg 8 R" operand1 [7:0] $end
$var reg 8 S" operand2 [7:0] $end
$var reg 8 T" result [7:0] $end
$var reg 9 U" temp [8:0] $end
$upscope $end
$scope module adder5 $end
$var wire 1 b a1 $end
$var wire 1 V" a2 $end
$var wire 1 W" a3 $end
$var wire 1 X" a4 $end
$var wire 1 Y" a5 $end
$var wire 1 Z" a6 $end
$var wire 1 [" a7 $end
$var wire 1 \" a8 $end
$var wire 1 ]" b1 $end
$var wire 1 ^" b2 $end
$var wire 1 _" b3 $end
$var wire 1 `" b4 $end
$var wire 1 a" b5 $end
$var wire 1 b" b6 $end
$var wire 1 c" b7 $end
$var wire 1 d" b8 $end
$var reg 1 a cout $end
$var reg 8 e" operand1 [7:0] $end
$var reg 8 f" operand2 [7:0] $end
$var reg 8 g" result [7:0] $end
$var reg 9 h" temp [8:0] $end
$upscope $end
$scope module adder6 $end
$var wire 1 a a1 $end
$var wire 1 i" a2 $end
$var wire 1 j" a3 $end
$var wire 1 k" a4 $end
$var wire 1 l" a5 $end
$var wire 1 m" a6 $end
$var wire 1 n" a7 $end
$var wire 1 o" a8 $end
$var wire 1 p" b1 $end
$var wire 1 q" b2 $end
$var wire 1 r" b3 $end
$var wire 1 s" b4 $end
$var wire 1 t" b5 $end
$var wire 1 u" b6 $end
$var wire 1 v" b7 $end
$var wire 1 w" b8 $end
$var reg 1 ` cout $end
$var reg 8 x" operand1 [7:0] $end
$var reg 8 y" operand2 [7:0] $end
$var reg 8 z" result [7:0] $end
$var reg 9 {" temp [8:0] $end
$upscope $end
$scope module adder7 $end
$var wire 1 ` a1 $end
$var wire 1 |" a2 $end
$var wire 1 }" a3 $end
$var wire 1 ~" a4 $end
$var wire 1 !# a5 $end
$var wire 1 "# a6 $end
$var wire 1 ## a7 $end
$var wire 1 $# a8 $end
$var wire 1 %# b1 $end
$var wire 1 &# b2 $end
$var wire 1 '# b3 $end
$var wire 1 (# b4 $end
$var wire 1 )# b5 $end
$var wire 1 *# b6 $end
$var wire 1 +# b7 $end
$var wire 1 ,# b8 $end
$var reg 1 _ cout $end
$var reg 8 -# operand1 [7:0] $end
$var reg 8 .# operand2 [7:0] $end
$var reg 8 /# result [7:0] $end
$var reg 9 0# temp [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module branch_target $end
$var wire 32 1# in1 [31:0] $end
$var wire 32 2# in2 [31:0] $end
$var reg 32 3# out [31:0] $end
$upscope $end
$scope module controller $end
$var wire 32 4# INSTRUCTION [31:0] $end
$var wire 1 * RESET $end
$var reg 4 5# ALUOP [3:0] $end
$var reg 8 6# OPCODE [7:0] $end
$var reg 1 D WRITEENABLE $end
$var reg 1 C b_notequal $end
$var reg 1 B branch $end
$var reg 1 @ jump $end
$var reg 1 " mem_read $end
$var reg 1 ! mem_write $end
$var reg 1 G mux_immediate $end
$var reg 1 H mux_minus $end
$upscope $end
$scope module extend_shift_beq $end
$var wire 8 7# in [7:0] $end
$var reg 32 8# out [31:0] $end
$var reg 32 9# temp [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 1 H sel $end
$var wire 8 :# in1 [7:0] $end
$var wire 8 ;# in0 [7:0] $end
$var reg 8 <# out [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 =# in0 [7:0] $end
$var wire 8 ># in1 [7:0] $end
$var wire 1 G sel $end
$var reg 8 ?# out [7:0] $end
$upscope $end
$scope module my_converter $end
$var wire 8 @# in_val [7:0] $end
$var reg 8 A# out_val [7:0] $end
$upscope $end
$scope module my_pc $end
$var wire 1 ( CLK $end
$var wire 1 * RESET $end
$var wire 1 # busy $end
$var wire 32 B# next [31:0] $end
$var reg 32 C# pc [31:0] $end
$upscope $end
$scope module resistry $end
$var wire 1 ( CLK $end
$var wire 3 D# INADDRESS [2:0] $end
$var wire 3 E# OUT1ADDRESS [2:0] $end
$var wire 3 F# OUT2ADDRESS [2:0] $end
$var wire 1 * RESET $end
$var wire 1 D WRITE $end
$var wire 1 # busy $end
$var wire 8 G# IN [7:0] $end
$var reg 8 H# OUT1 [7:0] $end
$var reg 8 I# OUT2 [7:0] $end
$var integer 32 J# i [31:0] $end
$upscope $end
$scope module select_entry $end
$var wire 8 K# in0 [7:0] $end
$var wire 8 L# in1 [7:0] $end
$var wire 1 " sel $end
$var reg 8 M# out [7:0] $end
$upscope $end
$scope module select_instruction_beq $end
$var wire 32 N# in0 [31:0] $end
$var wire 32 O# in1 [31:0] $end
$var wire 1 4 sel $end
$var reg 32 P# out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
b0 J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
bx {"
bx z"
bx y"
bx x"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
bx h"
bx g"
bx f"
bx e"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
bx U"
bx T"
bx S"
bx R"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
bx B"
bx A"
bx @"
bx ?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
bx /"
bx ."
bx -"
bx ,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
bx z
bx y
bx x
b0xxxxxxx w
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
0g
bx f
xe
xd
xc
xb
xa
x`
x_
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
xH
xG
bx F
bx E
xD
xC
xB
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
x6
x5
x4
bx 3
bx 2
bx 1
x0
bx /
x.
bx -
bx ,
b11000 +
0*
bx )
0(
bx '
bx &
bx %
bx $
x#
x"
x!
$end
#4
1(
#6
00
0.
0#
b100000000 1
1*
#7
b11111111111111111111111111111100 &
b11111111111111111111111111111100 ;
b11111111111111111111111111111100 C#
b0 K
b0 B#
b0 L
b0 1#
b0 N#
0*
#8
b1000 J#
0(
#12
1(
#13
b0 &
b0 ;
b0 C#
#14
b100 L
b100 1#
b100 N#
#15
b100 A
b100 2#
b100 8#
b1 9#
b1 7#
b1 D#
b0 E#
b1 F#
b1 >#
0!
0"
b0 6#
b10000000000000001 )
b10000000000000001 2
b10000000000000001 4#
#16
b100 K
b100 B#
b0 .#
b0 y"
b0 f"
b0 S"
b0 @"
b0 -"
b0 x
b100 <
b100 P#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0v
0u
0t
0s
0r
0q
0p
0o
04
05
06
b1 =
b1 S
b1 ]
b1 ?#
0C
0@
0B
1D
1G
b0 J
b0 R
b0 5#
b1000 9
b1000 3#
b1000 O#
0(
#17
0_
b0 V
b0 /#
b0 0#
b0 -#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0`
b0 W
b0 z"
b0 {"
b0 x"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0a
b0 X
b0 g"
b0 h"
b0 e"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0b
b0 Y
b0 T"
b0 U"
b0 R"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
17
0c
b0 Z
b0 A"
b0 B"
b0 ?"
06"
05"
04"
03"
02"
01"
00"
08
0d
b0 [
b0 ."
b0 /"
b0 ,"
0#"
0""
0!"
0~
0}
0|
0{
0e
b0 \
b0 y
b0 z
b0 w
b1 :
b1 G#
b1 M#
0n
0m
0l
0k
0j
0i
0h
b1 '
b1 -
b1 I
b1 U
b1 K#
b0 P
b0 f
bx1 O
b0x M
b1 N
b0 E
b0 ;#
b0 @#
b0 I#
b0 $
b0 ,
b0 F
b0 T
b0 ^
b0 H#
#18
b0 ?
b0 :#
b0 A#
b1 O
b0 M
#19
b1 Q
#20
1(
#21
b100 &
b100 ;
b100 C#
#22
b1000 K
b1000 B#
b1000 <
b1000 P#
b1000 L
b1000 1#
b1000 N#
#23
b10100 A
b10100 2#
b10100 8#
b101 9#
b101 =
b101 S
b101 ]
b101 ?#
b101 7#
b101 D#
b101 F#
b101 >#
b1010000000000000101 )
b1010000000000000101 2
b1010000000000000101 4#
b1 E
b1 ;#
b1 @#
b1 I#
#24
b101 :
b101 G#
b101 M#
b101 '
b101 -
b101 I
b101 U
b101 K#
b101 O
b101 N
b11111111 ?
b11111111 :#
b11111111 A#
b11100 9
b11100 3#
b11100 O#
0(
#25
b0 E
b0 ;#
b0 @#
b0 I#
b101 Q
#26
b0 ?
b0 :#
b0 A#
#28
1(
#29
b1000 &
b1000 ;
b1000 C#
#30
b1100 K
b1100 B#
b1100 <
b1100 P#
b1100 L
b1100 1#
b1100 N#
#31
b111 =
b111 S
b111 ]
b111 ?#
b101 E#
b111 F#
b111 >#
b10011 6#
b10011000001010000010100000111 )
b10011000001010000010100000111 2
b10011000001010000010100000111 4#
b101 E
b101 ;#
b101 @#
b101 I#
#32
b111 :
b111 G#
b111 M#
b111 '
b111 -
b111 I
b111 U
b111 K#
10
1#
b111 O
b111 N
1!
0D
b11111011 ?
b11111011 :#
b11111011 A#
b100000 9
b100000 3#
b100000 O#
0(
#33
b1 X
b1 g"
b1 h"
b1 e"
1\"
1H"
b10 Y
b10 T"
b10 U"
b10 R"
0I"
14"
b100 Z
b100 A"
b100 B"
b100 ?"
b11 ,"
05"
1#"
1""
b1000 [
b1000 ."
b1000 /"
b101 -"
b111 \
b111 y
b111 z
b101 x
b10 w
1+"
1)"
1v
1t
1m
b100011 P
b100011 f
b0 E
b0 ;#
b0 @#
b0 I#
b101 $
b101 ,
b101 F
b101 T
b101 ^
b101 H#
b111 Q
#34
b0 ?
b0 :#
b0 A#
b101 M
#35
b1100 Q
#36
1(
#40
0(
#44
1(
#48
0(
#52
1(
#56
0(
#60
1(
#64
0(
#68
1(
#72
0(
#76
1(
00
0#
#77
b1100 &
b1100 ;
b1100 C#
#78
b10000 K
b10000 B#
b10000 <
b10000 P#
b10000 L
b10000 1#
b10000 N#
#79
b11100 A
b11100 2#
b11100 8#
b111 9#
b111 7#
b111 D#
b1 E#
0!
b10100 6#
b10100000001110000000100000111 )
b10100000001110000000100000111 2
b10100000001110000000100000111 4#
#80
0$#
0##
0"#
0!#
0~"
0}"
0|"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
06"
05"
04"
03"
02"
01"
00"
0#"
0""
0!"
0~
0}
0|
0{
0_
b0 V
b0 /#
b0 0#
b0 .#
b0 -#
0`
b0 W
b0 z"
b0 {"
b0 y"
b0 x"
0a
b0 X
b0 g"
b0 h"
b0 f"
b0 e"
0b
b0 Y
b0 T"
b0 U"
b0 S"
b0 R"
0c
b0 Z
b0 A"
b0 B"
b0 @"
b0 ?"
0d
b0 [
b0 ."
b0 /"
b0 -"
b0 ,"
0e
b0 \
b0 y
b0 z
b0 x
b0 w
0,#
0w"
0u"
0d"
0b"
0Q"
0O"
0>"
0<"
0+"
0)"
0v
0t
0m
b0 P
b0 f
10
1#
b0 >
b0 <#
b0 =#
b0 =
b0 S
b0 ]
b0 ?#
1!
0H
0G
b101100 9
b101100 3#
b101100 O#
0(
#81
07
18
b0 :
b0 G#
b0 M#
b0 '
b0 -
b0 I
b0 U
b0 K#
b101 O
b0 M
b0 N
b1 $
b1 ,
b1 F
b1 T
b1 ^
b1 H#
#82
b1 O
#83
b1 Q
#84
1(
#88
0(
#92
1(
#96
0(
#100
1(
#104
0(
#108
1(
#112
0(
#116
1(
#120
0(
#124
1(
00
0#
#125
b10000 &
b10000 ;
b10000 C#
#126
b10100 K
b10100 B#
b10100 <
b10100 P#
b10100 L
b10100 1#
b10100 N#
#127
b11000 A
b11000 2#
b11000 8#
b110 9#
b110 7#
b110 D#
b110 E#
0!
b10001 6#
b10001000001100000011000000111 )
b10001000001100000011000000111 2
b10001000001100000011000000111 4#
#128
b1 [
b1 ."
b1 /"
b1 -"
b1 \
b1 y
b1 z
b1 x
1+"
1v
b111 P
b111 f
1.
1#
bx :
bx G#
bx M#
b111 =
b111 S
b111 ]
b111 ?#
1"
1D
1G
0(
#129
17
08
b0 [
b0 ."
b0 /"
b0 -"
b0 \
b0 y
b0 z
b0 x
0+"
0v
b111 '
b111 -
b111 I
b111 U
b111 K#
b0 P
b0 f
b111 O
b1 M
b111 N
b0 $
b0 ,
b0 F
b0 T
b0 ^
b0 H#
#130
b0 M
#131
b111 Q
#132
1(
#136
0(
#140
1(
#144
0(
#148
1(
#152
0(
#156
1(
#160
0(
#164
1(
#168
0(
#172
b101 :
b101 G#
b101 M#
1(
0.
0#
b101 %
b101 /
b101 3
b101 L#
#173
b10100 &
b10100 ;
b10100 C#
#174
b11000 K
b11000 B#
b11000 <
b11000 P#
b11000 L
b11000 1#
b11000 N#
#175
b1 X
b1 g"
b1 h"
b1 e"
1\"
1H"
b10 Y
b10 T"
b10 U"
b10 R"
0I"
14"
b100 Z
b100 A"
b100 B"
b100 ?"
b11 ,"
05"
1#"
1""
b1000 [
b1000 ."
b1000 /"
b101 -"
b111 \
b111 y
b111 z
b101 x
b10 w
b1000 A
b1000 2#
b1000 8#
b10 9#
b111 :
b111 G#
b111 M#
1+"
1)"
1v
1t
1m
b10 7#
b10 D#
b1 E#
0"
b10010 6#
b100011 P
b100011 f
b10010000000100000000100000111 )
b10010000000100000000100000111 2
b10010000000100000000100000111 4#
b101 $
b101 ,
b101 F
b101 T
b101 ^
b101 H#
#176
b0 X
b0 g"
b0 h"
b0 e"
0\"
b0 Y
b0 T"
b0 U"
b0 R"
0H"
b0 Z
b0 A"
b0 B"
b0 ?"
b0 ,"
06"
04"
0#"
0""
b0 [
b0 ."
b0 /"
b0 -"
b0 \
b0 y
b0 z
b0 x
b0 w
0+"
0)"
0v
0t
0m
b0 P
b0 f
1.
1#
b101 :
b101 G#
b101 M#
b0 =
b0 S
b0 ]
b0 ?#
1"
0G
b101 M
b100000 9
b100000 3#
b100000 O#
0(
#177
07
18
b0 '
b0 -
b0 I
b0 U
b0 K#
b101 O
b0 M
b0 N
b1 $
b1 ,
b1 F
b1 T
b1 ^
b1 H#
#178
b1 O
#179
b1 Q
#180
1(
#184
0(
#188
1(
#192
0(
#196
1(
#200
0(
#204
1(
#208
0(
#212
1(
#216
0(
#220
b1 :
b1 G#
b1 M#
1(
0.
0#
b1 %
b1 /
b1 3
b1 L#
#221
b11000 &
b11000 ;
b11000 C#
#222
b11100 K
b11100 B#
b11100 <
b11100 P#
b11100 L
b11100 1#
b11100 N#
#223
b1100 A
b1100 2#
b1100 8#
b11 9#
b0 :
b0 G#
b0 M#
b11 7#
b11 D#
b10 E#
b110 F#
b110 >#
0"
b10 6#
b10000000110000001000000110 )
b10000000110000001000000110 2
b10000000110000001000000110 4#
#224
17
08
b1 :
b1 G#
b1 M#
b1 '
b1 -
b1 I
b1 U
b1 K#
b1 J
b1 R
b1 5#
b101000 9
b101000 3#
b101000 O#
0(
#225
b1 [
b1 ."
b1 /"
b1 -"
1+"
b101 P
b101 f
b101 =
b101 S
b101 ]
b101 ?#
b101 >
b101 <#
b101 =#
b101 E
b101 ;#
b101 @#
b101 I#
#226
b101 O
b1 M
b101 N
b11111011 ?
b11111011 :#
b11111011 A#
#227
b110 :
b110 G#
b110 M#
b110 '
b110 -
b110 I
b110 U
b110 K#
b110 Q
#228
1(
#229
b11100 &
b11100 ;
b11100 C#
#230
b100000 K
b100000 B#
b100000 <
b100000 P#
b100000 L
b100000 1#
b100000 N#
#231
bx00 A
bx00 2#
bx00 8#
bx 9#
bx 7#
bx D#
bx E#
bx F#
bx >#
bx 6#
bx )
bx 2
bx 4#
#232
b101 :
b101 G#
b101 M#
b101 '
b101 -
b101 I
b101 U
b101 K#
b0 J
b0 R
b0 5#
0D
bx 9
bx 3#
bx O#
0(
#233
x$#
x##
x"#
x!#
x~"
x}"
x|"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
x_
bx V
bx /#
bx 0#
bx .#
bx -#
x`
bx W
bx z"
bx {"
bx y"
bx x"
xa
bx X
bx g"
bx h"
bx f"
bx e"
bx @"
bx x
xb
bx Y
bx T"
bx U"
bx S"
bx R"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
xv
xu
xt
xs
xr
xq
xp
xo
xc
bx Z
bx A"
bx B"
bx ?"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x#"
x""
x!"
x~
x}
x|
x{
xd
bx [
bx ."
bx /"
bx -"
bx ,"
xe
bx \
bx y
bx z
b0xxxxxxx w
bx =
bx S
bx ]
bx ?#
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
xn
xm
xl
xk
xj
xi
xh
bx >
bx <#
bx =#
bx P
bx f
bx E
bx ;#
bx @#
bx I#
bx $
bx ,
bx F
bx T
bx ^
bx H#
#234
x7
x8
bx :
bx G#
bx M#
bx '
bx -
bx I
bx U
bx K#
bx N
bx ?
bx :#
bx A#
bx O
bx M
#235
bx Q
#236
1(
#237
b100000 &
b100000 ;
b100000 C#
#238
b100100 K
b100100 B#
b100100 <
b100100 P#
b100100 L
b100100 1#
b100100 N#
#240
0(
#244
1(
#245
b100100 &
b100100 ;
b100100 C#
#246
b101000 K
b101000 B#
b101000 <
b101000 P#
b101000 L
b101000 1#
b101000 N#
#248
0(
#252
1(
#253
b101000 &
b101000 ;
b101000 C#
#254
b101100 K
b101100 B#
b101100 <
b101100 P#
b101100 L
b101100 1#
b101100 N#
#256
0(
#260
1(
#261
b101100 &
b101100 ;
b101100 C#
#262
b110000 K
b110000 B#
b110000 <
b110000 P#
b110000 L
b110000 1#
b110000 N#
#264
0(
#268
1(
#269
b110000 &
b110000 ;
b110000 C#
#270
b110100 K
b110100 B#
b110100 <
b110100 P#
b110100 L
b110100 1#
b110100 N#
#272
0(
#276
1(
#277
b110100 &
b110100 ;
b110100 C#
#278
b111000 K
b111000 B#
b111000 <
b111000 P#
b111000 L
b111000 1#
b111000 N#
#280
0(
#284
1(
#285
b111000 &
b111000 ;
b111000 C#
#286
b111100 K
b111100 B#
b111100 <
b111100 P#
b111100 L
b111100 1#
b111100 N#
#288
0(
#292
1(
#293
b111100 &
b111100 ;
b111100 C#
#294
b1000000 K
b1000000 B#
b1000000 <
b1000000 P#
b1000000 L
b1000000 1#
b1000000 N#
#296
0(
#300
1(
#301
b1000000 &
b1000000 ;
b1000000 C#
#302
b1000100 K
b1000100 B#
b1000100 <
b1000100 P#
b1000100 L
b1000100 1#
b1000100 N#
#304
0(
#308
1(
#309
b1000100 &
b1000100 ;
b1000100 C#
#310
b1001000 K
b1001000 B#
b1001000 <
b1001000 P#
b1001000 L
b1001000 1#
b1001000 N#
#312
0(
#316
1(
#317
b1001000 &
b1001000 ;
b1001000 C#
#318
b1001100 K
b1001100 B#
b1001100 <
b1001100 P#
b1001100 L
b1001100 1#
b1001100 N#
#320
0(
#324
1(
#325
b1001100 &
b1001100 ;
b1001100 C#
#326
b1010000 K
b1010000 B#
b1010000 <
b1010000 P#
b1010000 L
b1010000 1#
b1010000 N#
#328
0(
#332
1(
#333
b1010000 &
b1010000 ;
b1010000 C#
#334
b1010100 K
b1010100 B#
b1010100 <
b1010100 P#
b1010100 L
b1010100 1#
b1010100 N#
#336
0(
#340
1(
#341
b1010100 &
b1010100 ;
b1010100 C#
#342
b1011000 K
b1011000 B#
b1011000 <
b1011000 P#
b1011000 L
b1011000 1#
b1011000 N#
#344
0(
#348
1(
#349
b1011000 &
b1011000 ;
b1011000 C#
#350
b1011100 K
b1011100 B#
b1011100 <
b1011100 P#
b1011100 L
b1011100 1#
b1011100 N#
#352
0(
#356
1(
#357
b1011100 &
b1011100 ;
b1011100 C#
#358
b1100000 K
b1100000 B#
b1100000 <
b1100000 P#
b1100000 L
b1100000 1#
b1100000 N#
#360
0(
#364
1(
#365
b1100000 &
b1100000 ;
b1100000 C#
#366
b1100100 K
b1100100 B#
b1100100 <
b1100100 P#
b1100100 L
b1100100 1#
b1100100 N#
#368
0(
#372
1(
#373
b1100100 &
b1100100 ;
b1100100 C#
#374
b1101000 K
b1101000 B#
b1101000 <
b1101000 P#
b1101000 L
b1101000 1#
b1101000 N#
#376
0(
#380
1(
#381
b1101000 &
b1101000 ;
b1101000 C#
#382
b1101100 K
b1101100 B#
b1101100 <
b1101100 P#
b1101100 L
b1101100 1#
b1101100 N#
#384
0(
#388
1(
#389
b1101100 &
b1101100 ;
b1101100 C#
#390
b1110000 K
b1110000 B#
b1110000 <
b1110000 P#
b1110000 L
b1110000 1#
b1110000 N#
#392
0(
#396
1(
#397
b1110000 &
b1110000 ;
b1110000 C#
#398
b1110100 K
b1110100 B#
b1110100 <
b1110100 P#
b1110100 L
b1110100 1#
b1110100 N#
#400
0(
#404
1(
#405
b1110100 &
b1110100 ;
b1110100 C#
#406
b1111000 K
b1111000 B#
b1111000 <
b1111000 P#
b1111000 L
b1111000 1#
b1111000 N#
#408
0(
#412
1(
#413
b1111000 &
b1111000 ;
b1111000 C#
#414
b1111100 K
b1111100 B#
b1111100 <
b1111100 P#
b1111100 L
b1111100 1#
b1111100 N#
#416
0(
#420
1(
#421
b1111100 &
b1111100 ;
b1111100 C#
#422
b10000000 K
b10000000 B#
b10000000 <
b10000000 P#
b10000000 L
b10000000 1#
b10000000 N#
#424
0(
#428
1(
#429
b10000000 &
b10000000 ;
b10000000 C#
#430
b10000100 K
b10000100 B#
b10000100 <
b10000100 P#
b10000100 L
b10000100 1#
b10000100 N#
#432
0(
#436
1(
#437
b10000100 &
b10000100 ;
b10000100 C#
#438
b10001000 K
b10001000 B#
b10001000 <
b10001000 P#
b10001000 L
b10001000 1#
b10001000 N#
#440
0(
#444
1(
#445
b10001000 &
b10001000 ;
b10001000 C#
#446
b10001100 K
b10001100 B#
b10001100 <
b10001100 P#
b10001100 L
b10001100 1#
b10001100 N#
#448
0(
#452
1(
#453
b10001100 &
b10001100 ;
b10001100 C#
#454
b10010000 K
b10010000 B#
b10010000 <
b10010000 P#
b10010000 L
b10010000 1#
b10010000 N#
#456
0(
#460
1(
#461
b10010000 &
b10010000 ;
b10010000 C#
#462
b10010100 K
b10010100 B#
b10010100 <
b10010100 P#
b10010100 L
b10010100 1#
b10010100 N#
#464
0(
#468
1(
#469
b10010100 &
b10010100 ;
b10010100 C#
#470
b10011000 K
b10011000 B#
b10011000 <
b10011000 P#
b10011000 L
b10011000 1#
b10011000 N#
#472
0(
#476
1(
#477
b10011000 &
b10011000 ;
b10011000 C#
#478
b10011100 K
b10011100 B#
b10011100 <
b10011100 P#
b10011100 L
b10011100 1#
b10011100 N#
#480
0(
#484
1(
#485
b10011100 &
b10011100 ;
b10011100 C#
#486
b10100000 K
b10100000 B#
b10100000 <
b10100000 P#
b10100000 L
b10100000 1#
b10100000 N#
#488
0(
#492
1(
#493
b10100000 &
b10100000 ;
b10100000 C#
#494
b10100100 K
b10100100 B#
b10100100 <
b10100100 P#
b10100100 L
b10100100 1#
b10100100 N#
#496
0(
#500
1(
#501
b10100100 &
b10100100 ;
b10100100 C#
#502
b10101000 K
b10101000 B#
b10101000 <
b10101000 P#
b10101000 L
b10101000 1#
b10101000 N#
#504
0(
#507
